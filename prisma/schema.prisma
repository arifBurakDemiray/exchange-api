generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DB_URL")
}

enum ETransaction {
  BUY
  SELL
}

model User {
  id             String        @id @default(uuid())
  name           String?
  password       String
  email          String        @unique
  active         Boolean       @default(false)
  created_at     DateTime      @default(now())
  updated_at     DateTime      @updatedAt
  last_logged_in DateTime?
  UserCode       UserCode[]
  Transaction    Transaction[]
  Portfolio      Portfolio[]
  Asset          Asset[]

  @@map("user")
}

model Portfolio {
  id         String   @id @default(uuid())
  code       String
  created_at DateTime @default(now())
  user_id    String
  user       User     @relation(fields: [user_id], references: [id])
  share_id   String
  share      Share    @relation(fields: [share_id], references: [id])
  rate       Int

  @@map("portfolio")
}

model UserCode {
  id         String   @id @default(uuid())
  code       String
  created_at DateTime @default(now())
  user_id    String
  user       User     @relation(fields: [user_id], references: [id])

  @@map("user_code")
}

model Share {
  id          String        @id @default(uuid())
  symbol      String        @unique @db.VarChar(3)
  rate        Int
  price       Float         @unique @db.Double
  created_at  DateTime      @default(now())
  updated_at  DateTime      @updatedAt
  Transaction Transaction[]
  Portfolio   Portfolio[]
  Asset       Asset[]

  @@map("share")
}

model Asset {
  id         String       @id @default(uuid())
  user_id    String
  user       User         @relation(fields: [user_id], references: [id])
  share_id   String
  share      Share        @relation(fields: [share_id], references: [id])
  rate       Int
  cost       Float        @unique @db.Double
  created_at DateTime     @default(now())
  type       ETransaction

  @@map("asset")
}

model Transaction {
  id         String       @id @default(uuid())
  user_id    String
  user       User         @relation(fields: [user_id], references: [id])
  share_id   String
  share      Share        @relation(fields: [share_id], references: [id])
  rate       Int
  cost       Float        @unique @db.Double
  created_at DateTime     @default(now())
  type       ETransaction

  @@map("transaction")
}
